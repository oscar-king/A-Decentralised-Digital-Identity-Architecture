version: "3.7"

services:
#  ap_db:
#    image: postgres
#    restart: always
#    container_name: ap_db
#    environment:
#      - POSTGRES_PASSWORD=root
#      - POSTGRES_USER=root
#      - POSTGRES_DB=db
#    ports:
#      - "5432"
#
#  user_db:
#    image: postgres
#    restart: always
#    container_name: user_db
#    environment:
#      - POSTGRES_PASSWORD=root
#      - POSTGRES_USER=root
#      - POSTGRES_DB=db
#    ports:
#      - "5432"

  composer:
    build:
      context: .
      dockerfile: Playground-Dockerfile
    container_name: composer
    restart: always
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "${composer_port}"

  cp_rest_api:
    build:
      context: .
      dockerfile: REST-Server-Dockerfile
    container_name: cp_rest_api
    restart: always
    environment:
      - COMPOSER_CARD=CP@digid
      - COMPOSER_NAMESPACES=never
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "3000"
    depends_on:
      - composer

  ap_rest_api:
    build:
      context: .
      dockerfile: REST-Server-Dockerfile
    container_name: ap_rest_api
    restart: always
    environment:
      - COMPOSER_CARD=AP@digid
      - COMPOSER_NAMESPACES=never
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "3000"
    depends_on:
      - composer

  cp:
    build:
      context: .
      dockerfile: cp/Dockerfile
    container_name: cp
    restart: always
    environment:
      - APP_NAME=CertificationProvider
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "5000"

  ap:
    build:
      context: .
      dockerfile: ap/Dockerfile
    container_name: ap
    restart: always
    environment:
      - APP_NAME=AuthenticationProvider
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "5000"
#    depends_on:
#      - ap_db

  service:
    build:
      context: .
      dockerfile: service/Dockerfile
    container_name: service
    restart: always
    environment:
      - APP_NAME=Service
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "5000"

  user:
    build:
      context: .
      dockerfile: user/Dockerfile
    container_name: user
    restart: always
    environment:
      - APP_NAME=User
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "5000"

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "${user_port}:${user_port}"
      - "${ap_port}:${ap_port}"
      - "${cp_port}:${cp_port}"
      - "${service_port}:${service_port}"
      - "${ap_dlt_port}:${ap_dlt_port}"
      - "${cp_dlt_port}:${cp_dlt_port}"
      - "${composer_port}:${composer_port}"
    depends_on:
      - user
      - service
      - cp
      - ap
      - cp_rest_api
      - ap_rest_api
      - composer

networks:
  default:
    external:
      name: composer_default
