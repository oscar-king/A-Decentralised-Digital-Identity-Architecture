version: "3.7"

services:
  composer:
    image: hyperledger/composer-playground
    container_name: composer
    restart: always
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "8080:8080"

  cp_rest_api:
    image: hyperledger/composer-rest-server
    container_name: cp_rest_api
    restart: always
    environment:
      - COMPOSER_CARD=CP@digid
      - COMPOSER_NAMESPACES=never
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "${cp_dlt_port}:3000"

  ap_rest_api:
    image: hyperledger/composer-rest-server
    container_name: ap_rest_api
    restart: always
    environment:
      - COMPOSER_CARD=AP@digid
      - COMPOSER_NAMESPACES=never
    volumes:
      - ~/.composer:/home/composer/.composer
    ports:
      - "${ap_dlt_port}:3000"

  cp:
    build: ./cp
    container_name: cp
    restart: always
    environment:
      - APP_NAME=CertificationProvider
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "${cp_port}:5000"

  ap:
    build: ./ap
    container_name: ap
    restart: always
    environment:
      - APP_NAME=AuthenticationProvider
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "${ap_port}:5000"

  service:
    build: ./service
    container_name: service
    restart: always
    environment:
      - APP_NAME=Service
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "${service_port}:5000"

  user:
    build: ./user
    container_name: user
    restart: always
    environment:
      - APP_NAME=User
      - FLASK_ENV=${FLASK_ENV}
    ports:
      - "5000:5000"

#  nginx:
#    build: ./nginx
#    container_name: nginx
#    restart: always
#    volumes:
#      - ./cp/cp_cert.crt:/etc/nginx/cp_cert.crt
#      - ./cp/cp_cert.key:/etc/nginx/cp_cert.key
#      - ./cp/cp_cert.crt:/etc/nginx/ap_cert.crt
#      - ./cp/cp_cert.key:/etc/nginx/ap_cert.key
#      - ./cp/cp_cert.crt:/etc/nginx/service_cert.crt
#      - ./cp/cp_cert.key:/etc/nginx/service_cert.key
#    ports:
#      - "80:80"
#      - "8080:8080"
#      - "${ap_port}:${ap_port}"
#      - "${cp_port}:${cp_port}"
#      - "${service_port}:${service_port}"

networks:
  default:
    external:
      name: composer_default
